// Code generated by mockery v2.23.4. DO NOT EDIT.

package auth

import (
	model "github.com/kevindharmawan/saas-backend/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MockValidationService is an autogenerated mock type for the ValidationService type
type MockValidationService struct {
	mock.Mock
}

type MockValidationService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockValidationService) EXPECT() *MockValidationService_Expecter {
	return &MockValidationService_Expecter{mock: &_m.Mock}
}

// ValidateToken provides a mock function with given fields: token
func (_m *MockValidationService) ValidateToken(token string) (string, *model.AppError) {
	ret := _m.Called(token)

	var r0 string
	var r1 *model.AppError
	if rf, ok := ret.Get(0).(func(string) (string, *model.AppError)); ok {
		return rf(token)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) *model.AppError); ok {
		r1 = rf(token)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*model.AppError)
		}
	}

	return r0, r1
}

// MockValidationService_ValidateToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateToken'
type MockValidationService_ValidateToken_Call struct {
	*mock.Call
}

// ValidateToken is a helper method to define mock.On call
//   - token string
func (_e *MockValidationService_Expecter) ValidateToken(token interface{}) *MockValidationService_ValidateToken_Call {
	return &MockValidationService_ValidateToken_Call{Call: _e.mock.On("ValidateToken", token)}
}

func (_c *MockValidationService_ValidateToken_Call) Run(run func(token string)) *MockValidationService_ValidateToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockValidationService_ValidateToken_Call) Return(_a0 string, _a1 *model.AppError) *MockValidationService_ValidateToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockValidationService_ValidateToken_Call) RunAndReturn(run func(string) (string, *model.AppError)) *MockValidationService_ValidateToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockValidationService creates a new instance of MockValidationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockValidationService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockValidationService {
	mock := &MockValidationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
